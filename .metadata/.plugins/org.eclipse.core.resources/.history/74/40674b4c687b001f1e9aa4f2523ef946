package com.university.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.university.model.impl.Student;
import com.university.service.StudentService;

@WebServlet("/browseStudents.do")
public class BrowseStudentsServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;

	/**
	 * 사용자가 학생 조회 및 검색 탭을 눌렀을 때 호출 되는 메소드입니다.
	 */
	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		showContent(request, response);
	}

	/**
	 * 사용자를 위해 데이터베이스에 저장된 모든 학생들의 정보를 볼 수 있는 페이지를 생성합니다. 
	 * 
	 * 테이블 위에 있는 검색 기능으로 특정한 조건에 맞는 학생들을 골라 볼 수 있습니다.
	 * 학생 명단의 행을 지우고 싶다면 
	 * - 각 행에 있는 체크박스를 클릭하고 테이블 위에 있는 삭제 버튼으로 다량의 행을 삭제할 수 있습니다.
	 * - 각 행에 있는 빨간 쓰레기통 아이콘을 클릭하여 하나의 행을 삭제할 수 있습니다.
	 * 
	 * @param request  사용자 요청
	 * @param response 요청에 해당하는 학생 명단 페이
	 * @throws IOException
	 */
	private void showContent(HttpServletRequest request, HttpServletResponse response) throws IOException {

		HttpSession session = request.getSession();
		
		// Remember that there are two buttons in the same <form> tag
		// but their values are different:
		// "delete" to delete table rows
		// "search" to search for records
		
		// Mass Delete Student Rows 
		String action = request.getParameter("action");
		if (action == null) {
			action = "";
		}
		
		// Delegate mass student delete action to DeleteStudentServlet
		Boolean isMassDeleted = false;
		if (action.equals("delete")) {			
			String[] rowIds = request.getParameterValues("rowIds");
			if (rowIds != null) {			
				request.setAttribute("rowIds", rowIds); 
	            try {
					request.getRequestDispatcher("/deleteStudent.do").forward(request, response);
				} catch (ServletException | IOException e) {
					e.printStackTrace();
				}
	            isMassDeleted = true;
			}
		}
		
		// Get search Category & Keyword from session
		String searchCategory = request.getParameter("search_student_category");
		String searchKeyword = request.getParameter("search_student_keyword");
		
		// Set default value for both search category & keyword
		if (searchCategory == null) {
			searchCategory = "search_by_id";
		} 
		
		if (searchKeyword == null) {
			searchKeyword = "";
		} else {
			searchKeyword = searchKeyword.strip();
		}

		session.setAttribute("searchCategory", searchCategory);
		session.setAttribute("searchKeyword", searchKeyword);
		

		PrintWriter out = response.getWriter();

		// Head
		out.println("<!DOCTYPE html>");
		out.println("<html>");
		out.println("<head>");
		out.println("<meta charset='UTF-8'>");
		out.println("<meta name='viewport' content='width=device-width, initial-scale=1'>");
		out.println("<link rel='stylesheet' href='css/bootstrap.min.css' />");
		out.println("<script defer src='js/bootstrap.bundle.min.js'></script>");
		out.println("<link rel='icon' href='images/portal_icon.svg'/>");
		out.println("<title>학생 관리 포털</title>");
		out.println("</head>");

		// Body
		out.println("<body>");
		out.println("<main class='d-flex flex-nowrap vh-100'>");

		// Navbar
		out.println("<!-- Start of Navbar -->");
		out.println("<nav class='d-flex flex-lg-column flex-md-column flex-row flex-shrink-0 p-3 text-bg-dark' style='width: 25vw;'>");
		out.println("<a href='/' class='d-flex justify-content-around align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none'>");
		out.println("<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40' fill='currentColor' class='bi bi-mortarboard' viewBox='0 0 16 16'>");
		out.println("<path d='M8.211 2.047a.5.5 0 0 0-.422 0l-7.5 3.5a.5.5 0 0 0 .025.917l7.5 3a.5.5 0 0 0 .372 0L14 7.14V13a1 1 0 0 0-1 1v2h3v-2a1 1 0 0 0-1-1V6.739l.686-.275a.5.5 0 0 0 .025-.917zM8 8.46 1.758 5.965 8 3.052l6.242 2.913z'/>");
		out.println("<path d='M4.176 9.032a.5.5 0 0 0-.656.327l-.5 1.7a.5.5 0 0 0 .294.605l4.5 1.8a.5.5 0 0 0 .372 0l4.5-1.8a.5.5 0 0 0 .294-.605l-.5-1.7a.5.5 0 0 0-.656-.327L8 10.466zm-.068 1.873.22-.748 3.496 1.311a.5.5 0 0 0 .352 0l3.496-1.311.22.748L8 12.46z'/>");
		out.println("</svg>");
		out.println("<span class='ms-3' style='font-size: 1.5rem;'>학생 관리 포털</span>");
		out.println("</a>");
		out.println("<hr/>");
		out.println("<ul class='nav nav-pills flex-column mb-auto'>");

		// 홈
		out.println("<!-- Menu Home -->");
		out.println("<li class='nav-item'>");
		out.println("<a href='/' class='nav-link text-white'>");
		out.println("<div class='d-flex align-items-center'>");
		out.println("<svg class='bi me-2' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' width='16' height='16'>");
		out.println("<path stroke-linecap='round' stroke-linejoin='round' d='m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25' />");
		out.println("</svg>");
		out.println("<p class='m-0'>메뉴 홈</p>");
		out.println("</div>");
		out.println("</a>");
		out.println("</li>");

		// 학생 조회 및 검색
		out.println("<!-- List and Search Students -->");
		out.println("<li>");
		out.println("<a href='/browseStudents.do' class='nav-link active'>");
		out.println("<div class='d-flex align-items-center'>");
		out.println("<svg class='bi me-2' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' width='16' height='16'>");
		out.println("<path stroke-linecap='round' stroke-linejoin='round' d='m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z'/>");
		out.println("</svg>");
		out.println("<p class='m-0'>학생 관리</p>");
		out.println("</div>");
		out.println("</a>");
		out.println("</li>");
		
		out.println("</ul>");
		out.println("<hr/>");
		out.println("</nav>");
		out.println("<!-- End of Navbar -->");

		// 학생 명단
		out.println("<section class='d-flex justify-content-center align-items-center' style='width: 75vw; background-color: #ced9c7;'>");
		out.println("<!-- Start of Student List -->");
		out.println("<div class='container mx-auto bg-white rounded-4' style='max-height: 80vh; overflow-y: auto;'>");
		out.println("<h2 class='pt-5 text-center text-decoration-underline mb-3'>학생 명단</h2>");

		// 검색 창 (학번, 이름, 학과, 전화번호)
		out.println("<div class='p-5'>");
		out.println("<form action='/browseStudents.do' method='POST'>");
		out.println("<div class='row g-3 justify-content-end align-items-center mb-3'>");
		
		// 학생 대량 삭제 버튼
		out.println("<div class='me-auto col-auto d-flex align-items-center mt-3 g-2'>");		
		out.println("<button class='btn btn-danger d-flex align-items-center justify-content-between' type='submit' name='action' value='delete'>");
		out.println("<svg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' height='18' width='18'>");
		out.println("<path stroke-linecap='round' stroke-linejoin='round' d='m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0' />");
		out.println("</svg>");
		out.println("삭제</button>");
		
		// 학생 등록 버튼
		out.println("<button class='ms-1 btn btn-success d-flex align-items-center justify-content-between' type='button' data-bs-toggle='modal' data-bs-target='#registerStudentModal'>");
		out.println("<svg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' height='18' width='18'>"); 
		out.println("<path stroke-linecap='round' stroke-linejoin='round' d='M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z' />");  
		out.println("</svg>");
		out.println("등록</button>");
	
		out.println("</div>");
		
		out.println("<div class='col-auto'>");
		out.println("<div class='input-group'>");
		
		out.println("<div class='w-20'>");
		out.println("<select class='form-select border rounded-start border-secondary' style='border-radius: 0;' name='search_student_category'>");
		
		// Juggle selected attribute based on the current search category & keyword stored in session
		String category = (String) session.getAttribute("searchCategory");
		if (category.equals("search_by_id")) {
			out.println("<option value='search_by_id' selected> 학번 </option>");
		} else {
			out.println("<option value='search_by_id'> 학번 </option>");
		}
		
		if (category.equals("search_by_name")) {
			out.println("<option value='search_by_name' selected> 이름 </option>");
		} else {
			out.println("<option value='search_by_name'> 이름 </option>");
		}
		
		if (category.equals("search_by_major")) {			
			out.println("<option value='search_by_major' selected> 학과 </option>");
		} else {
			out.println("<option value='search_by_major'> 학과 </option>");
		}
		
		if (category.equals("search_by_phone_number")) {			
			out.println("<option value='search_by_phone_number' selected> 전화번호 </option>");
		} else {
			out.println("<option value='search_by_phone_number'> 전화번호 </option>");
		}
		
		out.println("</select>");
		out.println("</div>");
		
		out.println("<input type='search' class='form-control border border-secondary' id='search_student_keyword' name='search_student_keyword' placeholder='검색' value='"
						+ session.getAttribute("searchKeyword") + "'>");
		out.println("</div>");
		out.println("</div>");
		out.println("<div class='col-auto'>");
		out.println("<button type='submit' class='btn btn-primary' name='action' value='search'>검색</button>");
		out.println("</div>");
		out.println("</div>");
		out.println("<div class='table-responsive'>");
		out.println("<table class='table table-hover text-center w-100 overflow-y-hidden' style='table-layout: fixed;'> ");
		out.println("<thead class='table-dark sticky-top top-0 pt-3 bg-white'>");
		out.println("<tr>");
		out.println("<th scope='col'><input type='checkbox' class='form-check-input' style='' onclick='checkAllRows(this)' /></th>");
		out.println("<th scope='col'>학번</th>");
		out.println("<th scope='col'>이름</th>");
		out.println("<th scope='col'>학과</th>");
		out.println("<th scope='col'>전화번호</th>");
		out.println("<th scope='col'>수정 | 삭제</th>");
		out.println("</tr>");
		out.println("</thead>");
		out.println("<tbody>");

		// Show rows of Student record from the Database
		StudentService studentService = new StudentService();
		String keyword = (String) session.getAttribute("searchKeyword");
		
		List<Student> students = studentService.getAllStudents(category, keyword);
		// If the keyword is empty and there are still no results ==> then it's for sure empty
		// This is because ALL records of students are fetched via : SELECT * FROM student WHERE (searchCategory) LIKE (searchKeyword);  
		if (!keyword.equals("") && students.isEmpty()) {
			out.println("<tr>");
			out.println("<td class='p-5' colspan='7'>검색 결과에 해당하는 학생들이 없습니다</td>");
			out.println("</tr>");
		// If there are no REGISTERED students
		} else if (students.isEmpty()) {
			out.println("<tr>");
			out.println("<td class='p-5' colspan='7'>등록된 학생들이 없습니다</td>");
			out.println("</tr>");
		} else {
			for (Student student : students) {
				out.println("<tr>");
				out.println("<td><input type='checkbox' class='form-check-input row-checkbox' name='rowIds' value='" + student.getField("id") + "'/></td>");
				out.println("<td>" + student.getField("studentId") + "</td>");
				out.println("<td>" + student.getField("name") + "</td>");
				out.println("<td>" + student.getField("major") + "</td>");
				out.println("<td>" + student.getField("phoneNumber") + "</td>");
				out.println("<td>");
				out.println("<a href='readStudent.do?id=" + student.getField("id") + "' class='me-2 icon-link icon-link-hover text-primary'>");
				out.println("<svg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' width='18' height='18'>");
				out.println("<path stroke-linecap='round' stroke-linejoin='round' d='m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125' />");
				out.println("</svg>");
				out.println("</a>");
				out.println("<a href='deleteStudent.do?id=" + student.getField("id") + "' class='icon-link icon-link-hover text-danger'>");
				out.println("<svg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' width='18' height='18'>");
				out.println("<path stroke-linecap='round' stroke-linejoin='round' d='m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0' />");
				out.println("</svg>");
				out.println("</a>");
				out.println("</td>");
				out.println("</tr>");
			}
		}

		out.println("</tbody>");
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("<!-- End of Student List -->");
		out.println("</form>");
		out.println("</section>");
		out.println("</main>");
		
		
		
//		Map<String, String> errors = (LinkedHashMap<String,String>) request.getAttribute("errors");
//		Boolean isValidRegistration = (Boolean) request.getAttribute("isValidRegistration");
		
		@SuppressWarnings("unchecked")
		Map<String,String> errors = (LinkedHashMap<String,String>) session.getAttribute("errors");
		Boolean isValidRegistration = (Boolean) session.getAttribute("isValidRegistration");
		if (errors == null) {
			errors = new LinkedHashMap<String,String>();
			System.out.println("errors is NULL!");
		}
		
		if (errors != null) {
			Iterator<String> iterator = errors.keySet().iterator(); 
			while (iterator.hasNext()) {
				String key = iterator.next();
				System.out.println(key);
			}
		}
		
		if (isValidRegistration == null) {
			isValidRegistration = true;
//			System.out.println("Valid Registration is NULL!");
		}
		
		// 학생 등록 모달
		out.println("<div class='modal fade' id='registerStudentModal' tabindex='-1' aria-labelledby='registerStudentModal' aria-hidden='true'>");
		out.println("<div class='modal-dialog modal-dialog-centered modal-lg'>");
		out.println("<div class='modal-content'>");
		out.println("<div class='modal-header'>");
		out.println("<button type='button' class='btn-close' data-bs-dismiss='modal' aria-label='Close'></button>");
		out.println("</div>");
		// 모달 본문
		out.println("<div class='modal-body'>");
		out.println("<div class='col-lg-12'>");
		out.println("<div class='card-body p-md-4 mx-md-4'>");
		out.println("<div>");						
		out.println("<div class='text-center'>");
		out.println("<h4 class='w-100 mt-1 mb-5 pb-1'>학생 등록</h4>");
		out.println("</div>");
		out.println("<ol>");
		out.println("<li class='mb-2'><b>학번:</b> 숫자 10자리로 작성해주세요.</li>");
		out.println("<li class='mb-2'><b>이름:</b> 한글로 2-7글자 사이로 작성해주세요.</li>");
		out.println("<li class='mb-2'><b>학과:</b> 한글로 입력하시고 '학과'로 끝나게 작성해주세요.</li>");
		out.println("<li class='mb-2'><b>전화번호:</b> [ 010-1234-5678 ] 형식으로 작성해주세요.</li>");
		out.println("</ol>");
		out.println("</div>");
		
		out.println("<!-- Registration Form -->");
		out.println("<form action='/addStudent.do' method='POST'>");
		out.println("<!-- Student ID -->");
		out.println("<div data-mdb-input-init class='form-outline mb-3'>");
		out.println("<label class='form-label text-muted' for='student_id'>학번</label>");
		
		System.out.println("Valid Registration: " + isValidRegistration);
		// --------------- 학번 ---------------
		String registerStudentId = (String) session.getAttribute("registerStudentId");
		if (registerStudentId == null) {
			registerStudentId = "";
		}
		if (errors.containsKey("NullStudentIdException")) {
			out.println("<input type='text' id='student_id' class='form-control border-danger' name='student_id' placeholder='학번 (숫자 10자)' value='" + registerStudentId + "'/>");
			out.println("<p id='student_id_error' class='text-danger fs-6 error'> *" + errors.get("NullStudentIdException") + "</p>");
		} else if (errors.containsKey("InvalidStudentIdException")) {
			out.println("<input type='text' id='student_id' class='form-control border-danger' name='student_id' placeholder='학번 (숫자 10자)' value='" + registerStudentId + "'/>");
			out.println("<p id='student_id_error' class='text-danger fs-6 error'> *" + errors.get("InvalidStudentIdException") + "</p>");
		} else if (errors.containsKey("DuplicateStudentIdException")) {
			out.println("<input type='text' id='student_id' class='form-control border-danger' name='student_id' placeholder='학번 (숫자 10자)' value='" + registerStudentId + "'/>");
			out.println("<p id='student_id_error' class='text-danger fs-6 error'> *" + errors.get("DuplicateStudentIdException") + "</p>");
		} else {			
			out.println("<input type='text' id='student_id' class='form-control' name='student_id' placeholder='학번 (숫자 10자)' value='" + registerStudentId + "'/>");
			out.println("<p id='student_id_error' class='text-danger fs-6 error'></p>");
		}
		out.println("</div>");
		
		out.println("<!-- Student Name -->");
		out.println("<div data-mdb-input-init class='form-outline mb-3'>");
		out.println("<label class='form-label text-muted' for='student_name'>이름</label>");
		
		// --------------- 이름 ---------------
		String registerStudentName = (String) session.getAttribute("registerStudentName");
		if (registerStudentName == null) {
			registerStudentName = "";
		}
		
		if (errors.containsKey("NullNameException")) {
			out.println("<input type='text' id='student_name' class='form-control border-danger' name='student_name' placeholder='이름 (한글)' value='" + registerStudentName + "'/>");
			out.println("<p id='student_name_error' class='text-danger fs-6'> *" + errors.get("NullNameException") + "</p>");
		} else if (errors.containsKey("InvalidNameFormatException")) {
			out.println("<input type='text' id='student_name' class='form-control border-danger' name='student_name' placeholder='이름 (한글)' value='" + registerStudentName + "'/>");
			out.println("<p id='student_name_error' class='text-danger fs-6'> *" + errors.get("InvalidNameFormatException") + "</p>");
		} else if (errors.containsKey("NonKoreanNameException")) {
			out.println("<input type='text' id='student_name' class='form-control border-danger' name='student_name' placeholder='이름 (한글)' value='" + registerStudentName + "'/>");
			out.println("<p id='student_name_error' class='text-danger fs-6'> *" + errors.get("NonKoreanNameException") + "</p>");
		} else {			
			out.println("<input type='text' id='student_name' class='form-control' name='student_name' placeholder='이름 (한글)' value='" + registerStudentName + "'/>");
			out.println("<p id='student_name_error' class='text-danger fs-6'></p>");
		}
		out.println("</div>");
		
		out.println("<!-- Student Major -->");
		out.println("<div data-mdb-input-init class='form-outline mb-3'>");
		out.println("<label class='form-label text-muted' for='major'>학과</label>");
		
		// --------------- 전공 ---------------
		String registerStudentMajor = (String) session.getAttribute("registerStudentMajor");
		if (registerStudentMajor == null) {
			registerStudentMajor = "";
		}
		
		if (errors.containsKey("NullMajorException")) {
			out.println("<input type='text' id='student_major' class='form-control border-danger' name='student_major' placeholder='학과명 (00학과)' value='" + registerStudentMajor + "'/>");
			out.println("<p id='student_major_error' class='text-danger fs-6'> *" + errors.get("NullMajorException") + "</p>");
		} else if (errors.containsKey("InvalidMajorException")) {
			out.println("<input type='text' id='student_major' class='form-control border-danger' name='student_major' placeholder='학과명 (00학과)' value='" + registerStudentMajor + "'/>");
			out.println("<p id='student_major_error' class='text-danger fs-6'> *" + errors.get("InvalidMajorException") + "</p>");
		} else {
			out.println("<input type='text' id='student_major' class='form-control' name='student_major' placeholder='학과명 (00학과)' value='" + registerStudentMajor + "'/>");
			out.println("<p id='student_major_error' class='text-danger fs-6'></p>");
		}		
		out.println("</div>");
		
		out.println("<!-- Student Telephone Number -->");
		out.println("<div data-mdb-input-init class='form-outline mb-3'>");
		out.println("<label class='form-label text-muted' for='student_tel'>전화번호</label>");
		// --------------- 전화번호 ---------------
		String registerStudentPhoneNumber = (String) session.getAttribute("registerStudentPhoneNumber");
		if (registerStudentPhoneNumber == null) {
			registerStudentPhoneNumber = "";
		}
		
		if (errors.containsKey("NullPhoneNumberException")) {
			out.println("<input type='tel' id='student_phone_number' class='form-control border-danger' name='student_phone_number' placeholder='전화번호 (010-1234-5678)' value='" + registerStudentPhoneNumber + "'/>");
			out.println("<p id='student_phone_number_error' class='text-danger fs-6'> *" + errors.get("NullPhoneNumberException") + "</p>");
		} else if (errors.containsKey("InvalidPhoneNumberException")) {
			out.println("<input type='tel' id='student_phone_number' class='form-control border-danger' name='student_phone_number' placeholder='전화번호 (010-1234-5678)' value='" + registerStudentPhoneNumber + "'/>");
			out.println("<p id='student_phone_number_error' class='text-danger fs-6'> *" + errors.get("InvalidPhoneNumberException") + "</p>");
		} else if (errors.containsKey("DuplicatePhoneNumberException")) {
			out.println("<input type='tel' id='student_phone_number' class='form-control border-danger' name='student_phone_number' placeholder='전화번호 (010-1234-5678)' value='" + registerStudentPhoneNumber + "'/>");
			out.println("<p id='student_phone_number_error' class='text-danger fs-6'> *" + errors.get("DuplicatePhoneNumberException") + "</p>");
		} else {
			out.println("<input type='tel' id='student_phone_number' class='form-control' name='student_phone_number' placeholder='전화번호 (010-1234-5678)' value='" + registerStudentPhoneNumber + "'/>");
			out.println("<p id='student_phone_number_error' class='text-danger fs-6'></p>");
		}
		
//		out.println("<input type='tel' id='student_tel' class='form-control' name='student_phone_number' placeholder='전화번호 (010-1234-5678)' />");
		out.println("</div>");
		
		out.println("<!-- Submit -->");
		out.println("<div class='text-center pt-1 mb-1 pb-1'>");
		out.println("<div class='d-grid gap-2'>");
		out.println("<button data-mdb-button-init data-mdb-ripple-init class='btn btn-primary fa-lg gradient-custom-2 mb-3' type='submit'>등록</button>");
		out.println("</div>");
		out.println("</div>");
		out.println("</form>");
		out.println("</div>");
		out.println("</div>");
		
		out.println("</div>");
		
		out.println("<div class='modal-footer'>");
		out.println("<button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>취소</button>");
		out.println("</div>");
		out.println("</div>");
		out.println("</div>");
		out.println("</div>");
		
		// Script to check ALL checkboxes in table rows
		// Code provided by chatGPT
		out.println("<script>");
		out.println("function checkAllRows(tableHeadCheckBox) {");
		out.println("let checkboxes = document.querySelectorAll('input[type=\"checkbox\"].row-checkbox');");
		out.println("checkboxes.forEach(checkbox => checkbox.checked = tableHeadCheckBox.checked);");    
		out.println("}");
		
		out.println("let studentIdInput = document.getElementById('student_id');");
		out.println("let studentIdError = document.getElementById('student_id_error');");
		
		out.println("let studentNameInput = document.getElementById('student_name');");
		out.println("let studentNameError = document.getElementById('student_name_error');");
		
		out.println("let studentMajorInput = document.getElementById('student_major');");
		out.println("let studentMajorError = document.getElementById('student_major_error');");
		
		out.println("let studentPhoneNumberInput = document.getElementById('student_phone_number');");
		out.println("let studentPhoneNumberError = document.getElementById('student_phone_number_error');");
				
		out.println("document.addEventListener('DOMContentLoaded', function() {");
		out.println("const registerModal = new bootstrap.Modal(document.getElementById('registerStudentModal'));");
		
		if (!isValidRegistration) {			
			out.println("registerModal.show();");
			isValidRegistration = true;
		}
		
		out.println("});");  
		out.println("const registerModal = document.getElementById('registerStudentModal');");
		out.println("registerModal.addEventListener('hide.bs.modal', () => {");
	
		out.println("studentIdInput.classList.remove('border-danger');");
		out.println("studentIdInput.value = '';");
		out.println("studentIdError.remove()");
		
		out.println("studentNameInput.classList.remove('border-danger');");
		out.println("studentNameInput.value = '';");
		out.println("studentNameError.remove()");
		
		out.println("studentMajorInput.classList.remove('border-danger');");
		out.println("studentMajorInput.value = '';");
		out.println("studentMajorError.remove()");
		
		out.println("studentPhoneNumberInput.classList.remove('border-danger');");
		out.println("studentPhoneNumberInput.value = '';");
		out.println("studentPhoneNumberError.remove()");
		
		out.println("});");
			
		out.println("</script>");
		
		out.println("</body>");
		out.println("</html>");

		out.close();
		
		// Clear Validation Flag and Validation Errors
		session.removeAttribute("errors");
		session.removeAttribute("isValidRegistration");
		
		// Clear Student Registration form values
		session.removeAttribute("registerStudentId");
		session.removeAttribute("registerStudentName");
		session.removeAttribute("registerStudentMajor");
		session.removeAttribute("registerStudentPhoneNumber");
	}
}